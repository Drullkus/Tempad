plugins {
    id("maven-publish")
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven-publish'

    java.toolchain.languageVersion = JavaLanguageVersion.of(18)
    java.withSourcesJar()
    java.withJavadocJar()

    jar {
        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : project.jar.archiveVersion,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestampe'              : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Build-On-Minecraft'      : minecraft_version
            ])
        }
    }

    repositories {

        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }

        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        
        maven {
            // location of a maven mirror for JEI files, as a fallback
            name = "ModMaven"
            url = "https://modmaven.k-4u.nl"
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication){
                artifactId = "Tempad"
                version = "${project.version}-${archivesBaseName}"
                groupId = 'me.codexadrian'
                from(components.java)
                pom {
                    name = 'Tempad'
                    url = 'https://github.com/Toadstool-Studios/Tempad'
                    licenses {
                        license {
                            name = 'CC0'
                            url = 'https://github.com/Toadstool-Studios/Tempad/blob/1.18/LICENSE'
                        }
                    }
                    issueManagement {
                        system = 'github'
                        url = 'https://github.com/Toadstool-Studios/Tempad/issues'
                    }
                    scm {
                        url = 'https://github.com/Toadstool-Studios/Tempad'
                        connection = 'scm:git:git://github.com/Toadstool-Studios/Tempad.git'
                        developerConnection = 'scm:git:git@github.com:Toadstool-Studios/Tempad.git'
                    }
                }
            }
        }

        repositories {
            def mavenUsername = project.findProperty('mavenUserName')
            def mavenPassword = project.findProperty('mavenPassword')
            if(mavenUsername != null && mavenPassword != null) {
                maven {
                    name = 'OnyxStudiosMaven'
                    url = 'https://upload.onyxstudios.dev/'
                    credentials {
                        username = mavenUsername
                        password = mavenPassword
                    }
                    authentication {
                        basic(BasicAuthentication)
                    }
                }
            }
        }
    }

    tasks.withType(JavaCompile).configureEach {

        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {

        enabled = false
    }
}